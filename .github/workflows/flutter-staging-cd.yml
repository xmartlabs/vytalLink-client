name: Flutter Staging CD

on:
  pull_request:
    branches:
      - staging
    types:
      - closed ## Trigger the workflow only when the PR is merged

env:
  FIREBASE_ANDROID_APP_ID: "" ## Add your Firebase Android App ID here
jobs:
  calculate_build_number:
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.build_number.outputs.build_number }}
    env:
      GOOGLE_PLAY_SERVICE_ACCOUNT_CREDENTIALS_CONTENT: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_CREDENTIALS_CONTENT }}
      SERVICE_ACCOUNT: "${{ github.workspace }}/service_account.json"
    steps:
      - uses: actions/checkout@v5
      - name: Install ruby dependencies
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Download Firebase Service Account
        shell: bash
        env:
          SERVICE_ACCOUNT_CONTENT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_CREDENTIALS_BASE_64 }}
        run: |
          echo -n $SERVICE_ACCOUNT_CONTENT | base64 -d  > $SERVICE_ACCOUNT
      - name: Calculate next build number
        id: build_number
        env:
          SERVICE_ACCOUNT: ${{ env.SERVICE_ACCOUNT }}
          FIREBASE_APP_ID: ${{ env.FIREBASE_ANDROID_APP_ID }}
        run: |
          set -e
          command_result=$(bundle exec fastlane get_next_build_number)
          build_number=$(echo -e -n $command_result | grep -o 'Next Build Number: [0-9]\+' | awk '{print $NF}')
          echo -n -e "Result: $command_result"
          if [[ $build_number =~ ^[0-9]+$ ]]; then
            echo "Incremented build number: $build_number"
            echo "build_number=$build_number" >> $GITHUB_OUTPUT
          else
            echo "Error: $build_number is not a valid number"
            exit 1
          fi

  build_and_release_ios_staging_firebase:
    needs: [calculate_build_number]
    if: github.event.pull_request.merged == true
    timeout-minutes: 20
    env:
      IOS_APP_FOLDER: "ios"
      SERVICE_ACCOUNT: "${{ github.workspace }}/ios/service_account.json"
      FIREBASE_APP_ID_STAGING: "" ## Add your Firebase iOS App ID here
      FIREBASE_TESTER_GROUPS: "" ## Add your Firebase tester groups here
      APP_ENV: "staging"

    runs-on: macos-13
    steps:
      - name: Deploy iOS to Firebase
        uses: ./.github/workflows/actions/deploy-ios-firebase
        with:
          "dist-certificate-base-64-content": ${{ secrets.IOS_DIST_CERTIFICATE_BASE_64_CONTENT }}
          "ios-app-folder": ${{ env.IOS_APP_FOLDER }}
          "firebase-service-account-base-64-content": ${{ secrets.FIREBASE_SERVICE_ACCOUNT_CREDENTIALS_BASE_64 }}
          "appstore-connect-api-key-id": ${{ secrets.APPSTORE_CONNECT_API_KEY_ID }}
          "appstore-connect-api-key-issuer-id": ${{ secrets.APPSTORE_CONNECT_API_KEY_ISSUER_ID }}
          "appstore-connect-api-key-base-64-content": ${{ secrets.APPSTORE_CONNECT_API_KEY_BASE_64_CONTENT }}
          "app-env": ${{ env.APP_ENV }}
          "build-number": ${{ needs.calculate_build_number.outputs.build_number }}
          "firebase-app-id": ${{ env.FIREBASE_APP_ID_STAGING }}
          "firebase-tester-groups": ${{ env.FIREBASE_TESTER_GROUPS }}
          "dist-cert-password": ${{ secrets.IOS_DIST_CERTIFICATE_PASSWORD }}
          "service-account": ${{ env.SERVICE_ACCOUNT }}

  build_and_release_android_staging_firebase:
    needs: [calculate_build_number]
    if: github.event.pull_request.merged == true
    timeout-minutes: 20
    runs-on: ubuntu-latest
    env:
      ANDROID_APP_FOLDER: "android"
      SERVICE_ACCOUNT: "${{ github.workspace }}/android/service_account.json"
      PROD_KEY_PROPERTIES_FILE: "key.properties"
      FIREBASE_APP_ID_STAGING: "" ## Add your Firebase Android App ID here
      FIREBASE_TESTER_GROUPS: "" ## Add your Firebase tester groups here
      APP_ENV: "staging"

    steps:
      - name: Deploy Andorid to Firebase
        uses: ./.github/workflows/actions/deploy-android-firebase
        with:
          "key-properties-file": ${{ inputs.key-properties-file }}
          "firebase-base64-service-account-credentials": ${{ secrets.FIREBASE_SERVICE_ACCOUNT_CREDENTIALS_BASE_64 }}
          "android-app-folder": ${{ env.ANDROID_APP_FOLDER }}
          "app-env": ${{ env.APP_ENV }}
          "build-number": ${{ needs.calculate_build_number.outputs.build_number }}
          "firebase-app-id": ${{ env.FIREBASE_APP_ID_STAGING }}
          "firebase-tester-groups": ${{ env.FIREBASE_TESTER_GROUPS }}
          "service-account": ${{ env.SERVICE_ACCOUNT }}
